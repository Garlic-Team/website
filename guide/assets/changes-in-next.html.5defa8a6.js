import{r as n,o as a,c as s,a as e,b as t,w as o,F as p,d as c,f as r}from"./app.f28542fc.js";const i={},l=e("h1",{id:"upgrading-from-legacy-to-next",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#upgrading-from-legacy-to-next","aria-hidden":"true"},"#"),c(" Upgrading from legacy to next")],-1),d=e("h2",{id:"before-you-start",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#before-you-start","aria-hidden":"true"},"#"),c(" Before you start")],-1),u=e("p",null,[c("The next version needs Nodejs v16.6 or higher to use, so make sure you have that version or higher. If you need to find out your version, just open a terminal and type "),e("code",null,"node -v"),c(". If you don't have a sufficient version, then upgrade.")],-1),m=c("Remember that GCommands runs on discord.js, so make sure you have the latest version of "),h={href:"https://npmjs.org/discord.js",target:"_blank",rel:"noopener noreferrer"},k=c("discord.js"),g=c(" 13.x"),b=e("div",{class:"language-bash ext-sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"npm"),c(),e("span",{class:"token function"},"install"),c(" gcommands@next-dev\n")])])],-1),f=e("div",{class:"language-bash ext-sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"yarn"),c(),e("span",{class:"token function"},"add"),c(" gcommands@next-dev\n")])])],-1),v=e("div",{class:"language-bash ext-sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"pnpm"),c(),e("span",{class:"token function"},"add"),c(" gcommands@next-dev\n")])])],-1),x=r('<h2 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> Plugins</h2><p>We have big news, plugins!<br> You can make custom plugins that add something to GCommands.<br> Read more <a href="../plugins/first-plugin">here</a></p><h2 id="components" tabindex="-1"><a class="header-anchor" href="#components" aria-hidden="true">#</a> Components</h2><p>We have added full support for the component handler.<br> Read more <a href="../getting-started/first-component">here</a></p><h2 id="gcommandsclient" tabindex="-1"><a class="header-anchor" href="#gcommandsclient" aria-hidden="true">#</a> GCommandsClient</h2><p>^ renamed to <code>GClient</code></p><p>We renamed <code>GCommandsClient</code> to <code>GClient</code> because the name was too long.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> GCommandsClient\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> GClient\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="gcommandsclient-loader" tabindex="-1"><a class="header-anchor" href="#gcommandsclient-loader" aria-hidden="true">#</a> GCommandsClient#loader</h3><p>We have completely deleted the <code>loader</code> option, which has been replaced by <code>dirs</code> which is but an array.</p><h3 id="gcommandsclient-commands" tabindex="-1"><a class="header-anchor" href="#gcommandsclient-commands" aria-hidden="true">#</a> GCommandsClient#commands</h3><p>We have completely deleted the <code>commands</code> option, for which there is no longer a substitute, and the types shall be specified in the commands.</p><h3 id="gcommandsclient-defaultcooldown" tabindex="-1"><a class="header-anchor" href="#gcommandsclient-defaultcooldown" aria-hidden="true">#</a> GCommandsClient#defaultCooldown</h3><p>^ renamed to <code>GClient#cooldown</code><br> Property <code>defaultCooldown</code> has been renamed to <code>cooldown</code></p><h3 id="gclient-dirs" tabindex="-1"><a class="header-anchor" href="#gclient-dirs" aria-hidden="true">#</a> GClient#dirs</h3><p>As mentioned above, this is a replacement for <code>loader</code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>dirs<span class="token operator">:</span> <span class="token punctuation">[</span>\n    path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;commands&#39;</span><span class="token punctuation">)</span>\n    path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;events&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="gclient-messageprefix" tabindex="-1"><a class="header-anchor" href="#gclient-messageprefix" aria-hidden="true">#</a> GClient#messagePrefix</h3><p>We added property <code>messagePrefix</code> which is used to set the prefix for message commands.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>messagePrefix<span class="token operator">:</span> <span class="token string">&#39;!&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="commands" tabindex="-1"><a class="header-anchor" href="#commands" aria-hidden="true">#</a> Commands</h2><p>We are adding a completely new system for commands.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Command<span class="token punctuation">,</span> CommandType <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gcommands&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">new</span> <span class="token class-name">Command</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;omgg&#39;</span><span class="token punctuation">,</span>\n    description<span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span>\n    type<span class="token operator">:</span> <span class="token punctuation">[</span> CommandType<span class="token punctuation">.</span><span class="token constant">SLASH</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">run</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&#39;lol&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="runoptions-respond" tabindex="-1"><a class="header-anchor" href="#runoptions-respond" aria-hidden="true">#</a> RunOptions#respond</h3><p>^ replaced with <code>RunOptions#reply</code></p><h3 id="commandoptions-type" tabindex="-1"><a class="header-anchor" href="#commandoptions-type" aria-hidden="true">#</a> CommandOptions#type</h3><p>As mentioned above, we have deleted the properties in the client, and added them purely to the commands. It now uses an array with types, rather than <code>&#39;slash&#39;: &#39;something&#39;, &#39;context&#39;: &#39;something&#39;</code></p><h3 id="commandoptions-arguments" tabindex="-1"><a class="header-anchor" href="#commandoptions-arguments" aria-hidden="true">#</a> CommandOptions#arguments</h3><p>^ renamed from <code>args</code> to <code>arguments</code></p><h2 id="listeners" tabindex="-1"><a class="header-anchor" href="#listeners" aria-hidden="true">#</a> Listeners</h2><p>^ renamed from Events to Listeners<br> In the run function there is only a parameter for the event, but djs adds <code>client</code> everywhere, so you can use for example <code>message.client</code></p><p>Listener has a <code>name</code>, and then a name in options.<br> The <code>name</code> in options is so that they don&#39;t get duplicated and you can have multiple listeners.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Listener <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gcommands&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">new</span> <span class="token class-name">Listener</span><span class="token punctuation">(</span><span class="token string">&#39;ready&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;botready&#39;</span><span class="token punctuation">,</span> <span class="token comment">// what????? This is a uniqueId for an event, so you can have more of them and not get replaced.</span>\n    <span class="token function-variable function">run</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">client</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>client<span class="token punctuation">.</span>user<span class="token punctuation">.</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> ready!</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2>',34),y=c("Don't forget to check out this full guide!"),C=e("br",null,null,-1),w=c(" You can see the example bot "),j={href:"https://github.com/Garlic-Team/GCommands/tree/next/example",target:"_blank",rel:"noopener noreferrer"},G=c("here");i.render=function(c,r){const i=n("OutboundLink"),_=n("CodeGroupItem"),L=n("CodeGroup");return a(),s(p,null,[l,d,u,e("p",null,[m,e("a",h,[k,t(i)]),g]),t(L,null,{default:o((()=>[t(_,{title:"npm"},{default:o((()=>[b])),_:1}),t(_,{title:"yarn"},{default:o((()=>[f])),_:1}),t(_,{title:"pnpm"},{default:o((()=>[v])),_:1})])),_:1}),x,e("p",null,[y,C,w,e("a",j,[G,t(i)])])],64)};export{i as default};
