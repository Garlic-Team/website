import{r as n,o as s,c as a,a as p,b as t,w as e,F as o,d as c,f as l}from"./app.3fcc15ef.js";const u={},i=p("h1",{id:"storing-data-with-prisma",tabindex:"-1"},[p("a",{class:"header-anchor",href:"#storing-data-with-prisma","aria-hidden":"true"},"#"),c(" Storing data with prisma")],-1),r=p("h2",{id:"what-is-prisma",tabindex:"-1"},[p("a",{class:"header-anchor",href:"#what-is-prisma","aria-hidden":"true"},"#"),c(" What is prisma?")],-1),k=c("Prisma is a database ORM with typescript and nodeJS support. You can read more about prisma "),b={href:"https://www.prisma.io/",target:"_blank",rel:"noopener noreferrer"},m=c("here"),d=c(". Prisma provides support for the following databases:"),g=l('<ul><li>PostgreSQL</li><li>MySQL</li><li>MariaDB</li><li>SQlite</li><li>AWS Aurora</li><li>Microsoft SQL Server</li><li>Azure SQL</li><li>MongoDB (preview)</li><li>PlanetScale (preview)</li></ul><h2 id="simple-tag-sytem" tabindex="-1"><a class="header-anchor" href="#simple-tag-sytem" aria-hidden="true">#</a> Simple tag sytem</h2><p>In this guide we are going to create a simple tag system with prisma.</p><h3 id="installing-prisma" tabindex="-1"><a class="header-anchor" href="#installing-prisma" aria-hidden="true">#</a> Installing prisma</h3>',4),h=p("div",{class:"language-bash ext-sh"},[p("pre",{class:"language-bash"},[p("code",null,[p("span",{class:"token function"},"npm"),c(),p("span",{class:"token function"},"install"),c(" prisma @prisma/client\n")])])],-1),f=p("div",{class:"language-bash ext-sh"},[p("pre",{class:"language-bash"},[p("code",null,[p("span",{class:"token function"},"yarn"),c(),p("span",{class:"token function"},"add"),c(" prisma @prisma/client\n")])])],-1),y=p("div",{class:"language-bash ext-sh"},[p("pre",{class:"language-bash"},[p("code",null,[p("span",{class:"token function"},"pnpm"),c(),p("span",{class:"token function"},"add"),c(" prisma @prisma/client\n")])])],-1),w=l('<p>After your package manager finished installing <code>prisma</code> and <code>@prisma/client</code> you can confirm your installation with <code>npx prisma</code>.</p><h3 id="initiating-prisma" tabindex="-1"><a class="header-anchor" href="#initiating-prisma" aria-hidden="true">#</a> Initiating prisma</h3><p>Next we need to initialize prisma.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>npx prisma init\n</code></pre></div><p>This command will create the <code>prisma</code> folder which contains your <code>schema.prisma</code> file.</p><h3 id="connecting-to-your-database" tabindex="-1"><a class="header-anchor" href="#connecting-to-your-database" aria-hidden="true">#</a> Connecting to your database</h3>',6),v=c("In this guide we are going to use SQlite, because its easy to setup. You can read more about connecting to your database "),x={href:"https://www.prisma.io/docs/getting-started/setup-prisma/start-from-scratch/relational-databases/connect-your-database-typescript-postgres",target:"_blank",rel:"noopener noreferrer"},A=c("here"),T=c("."),S=p("div",{class:"language-prisma ext-prisma line-numbers-mode"},[p("pre",{class:"language-prisma"},[p("code",null,'// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = "prisma-client-js"\n}\n\ndatasource db {\n  provider = "sqlite"\n  url      = "file:./dev.db"\n}\n')]),p("div",{class:"line-numbers"},[p("span",{class:"line-number"},"1"),p("br"),p("span",{class:"line-number"},"2"),p("br"),p("span",{class:"line-number"},"3"),p("br"),p("span",{class:"line-number"},"4"),p("br"),p("span",{class:"line-number"},"5"),p("br"),p("span",{class:"line-number"},"6"),p("br"),p("span",{class:"line-number"},"7"),p("br"),p("span",{class:"line-number"},"8"),p("br"),p("span",{class:"line-number"},"9"),p("br"),p("span",{class:"line-number"},"10"),p("br"),p("span",{class:"line-number"},"11"),p("br")])],-1),C=p("p",null,":::",-1),j=l('<p>This will use a file called <code>dev.db</code> to store data.</p><p>Make sure to add the PrismaClient as your database when initializing the client.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> PrismaClient <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@prisma/client&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token operator">...</span>options<span class="token punctuation">,</span>\n    database<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">PrismaClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="creating-the-tag-model" tabindex="-1"><a class="header-anchor" href="#creating-the-tag-model" aria-hidden="true">#</a> Creating the Tag model</h3><p>Next in your prisma.schema file add the following model at the bottom of the file.</p><div class="language-prisma ext-prisma line-numbers-mode"><pre class="language-prisma"><code>model Tag {\n  id          Int      @id @default(autoincrement())\n  name        String   @unique\n  description String\n  username    String\n  createdAt   DateTime @default(now())\n  usage_count Int      @default(0)\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>This will create the model Tag.</p><p>Push the changes to your database and build the prisma client with:</p><div class="language-bash ext-sh"><pre class="language-bash"><code>npx prisma db push\n</code></pre></div><h3 id="creating-the-tag-command" tabindex="-1"><a class="header-anchor" href="#creating-the-tag-command" aria-hidden="true">#</a> Creating the tag command</h3><p>For the tag command we will use slash commands.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> PrismaClient <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@prisma/client&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Command<span class="token punctuation">,</span> CommandType<span class="token punctuation">,</span> Argument<span class="token punctuation">,</span> ArgumentType<span class="token punctuation">,</span> AutoDeferType <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;gcommands&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Command</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;tag&#39;</span><span class="token punctuation">,</span>\n    description<span class="token operator">:</span> <span class="token string">&#39;Tags&#39;</span><span class="token punctuation">,</span>\n    type<span class="token operator">:</span> <span class="token punctuation">[</span>CommandType<span class="token punctuation">.</span><span class="token constant">SLASH</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token comment">// Automaticly defer the interaction if the response takes to long</span>\n    autoDefer<span class="token operator">:</span> AutoDeferType<span class="token punctuation">.</span><span class="token constant">NORMAL</span><span class="token punctuation">,</span>\n    arguments<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;create&#39;</span><span class="token punctuation">,</span>\n            description<span class="token operator">:</span> <span class="token string">&#39;Create a new tag&#39;</span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n                    description<span class="token operator">:</span> <span class="token string">&#39;The name for the tag&#39;</span><span class="token punctuation">,</span>\n                    type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>\n                    required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;description&#39;</span><span class="token punctuation">,</span>\n                    description<span class="token operator">:</span> <span class="token string">&#39;The description for the tag&#39;</span><span class="token punctuation">,</span>\n                    type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>\n                    required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;find&#39;</span><span class="token punctuation">,</span>\n            description<span class="token operator">:</span> <span class="token string">&#39;Find a tag&#39;</span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n                    description<span class="token operator">:</span> <span class="token string">&#39;The name of the tag&#39;</span><span class="token punctuation">,</span>\n                    type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>\n                    required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;edit&#39;</span><span class="token punctuation">,</span>\n            description<span class="token operator">:</span> <span class="token string">&#39;Edit a tag&#39;</span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n                    description<span class="token operator">:</span> <span class="token string">&#39;The of the tag&#39;</span><span class="token punctuation">,</span>\n                    type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>\n                    required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;description&#39;</span><span class="token punctuation">,</span>\n                    description<span class="token operator">:</span> <span class="token string">&#39;The description for the tag&#39;</span><span class="token punctuation">,</span>\n                    type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>\n                    required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">,</span>\n            description<span class="token operator">:</span> <span class="token string">&#39;View specific info on a tag&#39;</span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n                    description<span class="token operator">:</span> <span class="token string">&#39;The name of the tag&#39;</span><span class="token punctuation">,</span>\n                    type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>\n                    required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span>\n            description<span class="token operator">:</span> <span class="token string">&#39;View all tags&#39;</span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;delete&#39;</span><span class="token punctuation">,</span>\n            description<span class="token operator">:</span> <span class="token string">&#39;Delete a tag&#39;</span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n                    description<span class="token operator">:</span> <span class="token string">&#39;The name of the tag&#39;</span><span class="token punctuation">,</span>\n                    type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>\n                    required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">run</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// This method is needed to get the correct typings for PrismaClient (typing hints)</span>\n        <span class="token keyword">const</span> database <span class="token operator">=</span> ctx<span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token class-name">PrismaClient</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> sub <span class="token operator">=</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getSubcommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>sub <span class="token operator">===</span> <span class="token string">&#39;create&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// Creating a tag</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sub <span class="token operator">===</span> <span class="token string">&#39;find&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// Finding a tag</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sub <span class="token operator">===</span> <span class="token string">&#39;edit&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// Editing a tag</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sub <span class="token operator">===</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// Detailed information on a tag</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sub <span class="token operator">===</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// Listing all tags</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sub <span class="token operator">===</span> <span class="token string">&#39;delete&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// Deleting a tag</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br></div></div><h4 id="creating-a-tag" tabindex="-1"><a class="header-anchor" href="#creating-a-tag" aria-hidden="true">#</a> Creating a tag</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> tag <span class="token operator">=</span> <span class="token keyword">await</span> database<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    data<span class="token operator">:</span> <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        description<span class="token operator">:</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&#39;description&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        username<span class="token operator">:</span> ctx<span class="token punctuation">.</span>user<span class="token punctuation">.</span>tag<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Check if the error is a unique constraint error (https://www.prisma.io/docs/reference/api-reference/error-reference)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token string">&#39;P2002&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token keyword">else</span> <span class="token keyword">throw</span> error<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Check if the operation was succesful</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tag<span class="token punctuation">)</span> <span class="token keyword">return</span> ctx<span class="token punctuation">.</span><span class="token function">safeReply</span><span class="token punctuation">(</span><span class="token string">&#39;That tag already exists&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">else</span> <span class="token keyword">return</span> ctx<span class="token punctuation">.</span><span class="token function">safeReply</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Successfully created tag </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tag<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="finding-a-tag" tabindex="-1"><a class="header-anchor" href="#finding-a-tag" aria-hidden="true">#</a> Finding a tag</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> tag <span class="token operator">=</span> <span class="token keyword">await</span> database<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">findUnique</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    where<span class="token operator">:</span> <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tag<span class="token punctuation">)</span> <span class="token keyword">return</span> ctx<span class="token punctuation">.</span><span class="token function">safeReply</span><span class="token punctuation">(</span><span class="token string">&#39;Could not find that tag&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Increment the tag usage</span>\n<span class="token keyword">await</span> database<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    where<span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> tag<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    data<span class="token operator">:</span> <span class="token punctuation">{</span>\n        usage_count<span class="token operator">:</span> tag<span class="token punctuation">.</span>usage_count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">return</span> ctx<span class="token punctuation">.</span><span class="token function">safeReply</span><span class="token punctuation">(</span>tag<span class="token punctuation">.</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="editing-a-tag" tabindex="-1"><a class="header-anchor" href="#editing-a-tag" aria-hidden="true">#</a> Editing a tag</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> tag <span class="token operator">=</span> <span class="token keyword">await</span> database<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">findUnique</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    where<span class="token operator">:</span> <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tag<span class="token punctuation">)</span> <span class="token keyword">return</span> ctx<span class="token punctuation">.</span><span class="token function">safeReply</span><span class="token punctuation">(</span><span class="token string">&#39;Could not find that tag&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Edit the tag</span>\n<span class="token keyword">await</span> database<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    where<span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> tag<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    data<span class="token operator">:</span> <span class="token punctuation">{</span>\n        description<span class="token operator">:</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&#39;description&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">return</span> ctx<span class="token punctuation">.</span><span class="token function">safeReply</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Edited tag </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tag<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="detailed-information-on-a-tag" tabindex="-1"><a class="header-anchor" href="#detailed-information-on-a-tag" aria-hidden="true">#</a> Detailed information on a tag</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> tag <span class="token operator">=</span> <span class="token keyword">await</span> database<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">findUnique</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    where<span class="token operator">:</span> <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tag<span class="token punctuation">)</span> <span class="token keyword">return</span> ctx<span class="token punctuation">.</span><span class="token function">safeReply</span><span class="token punctuation">(</span><span class="token string">&#39;Could not find that tag&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> ctx<span class="token punctuation">.</span><span class="token function">safeReply</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tag<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> was created by </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tag<span class="token punctuation">.</span>username<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> at </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tag<span class="token punctuation">.</span>createdAt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> and has been used </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tag<span class="token punctuation">.</span>usage_count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> times.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="listing-all-tags" tabindex="-1"><a class="header-anchor" href="#listing-all-tags" aria-hidden="true">#</a> Listing all tags</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> tags <span class="token operator">=</span> <span class="token keyword">await</span> database<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">findMany</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">return</span> ctx<span class="token punctuation">.</span><span class="token function">safeReply</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">List of tags: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">tag</span> <span class="token operator">=&gt;</span> tag<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;no tags found&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="deleting-a-tag" tabindex="-1"><a class="header-anchor" href="#deleting-a-tag" aria-hidden="true">#</a> Deleting a tag</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> tag <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tag<span class="token punctuation">)</span> <span class="token keyword">return</span> ctx<span class="token punctuation">.</span><span class="token function">safeReply</span><span class="token punctuation">(</span><span class="token string">&#39;Could not find that tag&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> database<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        where<span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> tag<span class="token punctuation">.</span>id <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    <span class="token keyword">return</span> ctx<span class="token punctuation">.</span><span class="token function">safeReply</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Successfully deleted tag </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tag<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',24);u.render=function(c,l){const u=n("OutboundLink"),q=n("CodeGroupItem"),M=n("CodeGroup");return s(),a(o,null,[i,r,p("p",null,[k,p("a",b,[m,t(u)]),d]),g,t(M,null,{default:e((()=>[t(q,{title:"npm"},{default:e((()=>[h])),_:1}),t(q,{title:"yarn"},{default:e((()=>[f])),_:1}),t(q,{title:"pnpm"},{default:e((()=>[y])),_:1})])),_:1}),w,p("p",null,[v,p("a",x,[A,t(u)]),T]),t(M,null,{default:e((()=>[t(q,{title:"schema.prisma"},{default:e((()=>[S])),_:1}),C])),_:1}),j],64)};export{u as default};
