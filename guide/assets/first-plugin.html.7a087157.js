import{r as n,o as s,c as a,a as e,b as p,w as t,F as l,f as o,d as r}from"./app.d3e05063.js";const i={},c=o('<h1 id="creating-your-first-plugin" tabindex="-1"><a class="header-anchor" href="#creating-your-first-plugin" aria-hidden="true">#</a> Creating your first plugin</h1><p>First we need to tell ourselves if we want to do the plugin as an npm package, or some folder just for us. If we want to do the plugin as an npm package then we need to make our package called <code>gcommands-plugin-{name}</code>. If we want it purely just a folder then we just need to make a <code>plugins</code> folder, into which we put the plugin folder.</p><p>You can also do the plugin in TypeScript, but you don&#39;t have to. If you do make the plugin in TypeScript, you have to build the plugin before publishing.</p><p>Now that we have everything ready, let&#39;s create the main <code>index.js</code> file for the plugin.<br> Then we import <code>Plugin</code> from <code>gcommands</code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Plugin<span class="token punctuation">,</span> registerDirectory <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gcommands&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Plugin</span><span class="token punctuation">(</span><span class="token string">&#39;my-first-plugin&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token function">registerDirectory</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;listeners&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',5),u=r("We have registered a listeners folder that we will keep in the plugin. Then all you have to do is create listeners in this folder, as already shown "),d=r("here"),b=o('<h3 id="package" tabindex="-1"><a class="header-anchor" href="#package" aria-hidden="true">#</a> Package</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>├── node_modules\n    └── gcommands-plugin-my-pluginň\n        └── listeners\n            └── ready.js\n        └── index.js\n├── package.json\n└── src\n    └── index.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="folder" tabindex="-1"><a class="header-anchor" href="#folder" aria-hidden="true">#</a> Folder</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>├── node_modules\n├── package.json\n├── plugins\n    └── my-first-plugin\n        └── listeners\n            └── ready.js\n        └── index.js\n└── src\n    └── index.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',4);i.render=function(o,r){const i=n("RouterLink");return s(),a(l,null,[c,e("p",null,[u,p(i,{to:"/getting-started/first-listener.html"},{default:t((()=>[d])),_:1})]),b],64)};export{i as default};
