import{r as n,o as s,c as a,a as e,b as t,w as o,F as p,d as l,f as c}from"./app.9b0869d0.js";const u={},i=e("h1",{id:"what-are-plugins",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#what-are-plugins","aria-hidden":"true"},"#"),l(" What are plugins?")],-1),r=l("GCommands Next has started to support plugins. A plugin is an addition to GCommands that will make your job easier. Users can create custom plugins for inhibitors, events and such. GCommands has a couple of official plugins, which can be found "),m={href:"https://github.com/Garlic-Team/gcommands-addons/",target:"_blank",rel:"noopener noreferrer"},d=l("here"),g=l("."),k=e("p",null,"You always install the plugin as follows:",-1),h=e("div",{class:"language-bash ext-sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"npm"),l(),e("span",{class:"token function"},"install"),l(" gcommands-plugin-"),e("span",{class:"token punctuation"},"{"),l("name"),e("span",{class:"token punctuation"},"}"),l("\n"),e("span",{class:"token function"},"npm"),l(),e("span",{class:"token function"},"install"),l(" @gcommands/plugin-"),e("span",{class:"token punctuation"},"{"),l("name"),e("span",{class:"token punctuation"},"}"),l(),e("span",{class:"token comment"},"# for official plugins "),l("\n")])])],-1),b=e("div",{class:"language-bash ext-sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"yarn"),l(),e("span",{class:"token function"},"add"),l(" gcommands-plugin-"),e("span",{class:"token punctuation"},"{"),l("name"),e("span",{class:"token punctuation"},"}"),l("\n"),e("span",{class:"token function"},"yarn"),l(),e("span",{class:"token function"},"add"),l(" @gcommands/plugin-"),e("span",{class:"token punctuation"},"{"),l("name"),e("span",{class:"token punctuation"},"}"),l(),e("span",{class:"token comment"},"# for official plugins "),l("\n")])])],-1),f=e("div",{class:"language-bash ext-sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"pnpm"),l(),e("span",{class:"token function"},"add"),l(" gcommands-plugin-"),e("span",{class:"token punctuation"},"{"),l("name"),e("span",{class:"token punctuation"},"}"),l("\n"),e("span",{class:"token function"},"pnpm"),l(),e("span",{class:"token function"},"add"),l(" @gcommands/plugin-"),e("span",{class:"token punctuation"},"{"),l("name"),e("span",{class:"token punctuation"},"}"),l(),e("span",{class:"token comment"},"# for official plugins "),l("\n")])])],-1),v=c('<p>In our case we use <code>npm i @gcommands/plugin-moreevents</code>.</p><p>Once installed, all you have to do is make sure you have the following in the main file:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Plugins <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gcommands&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nPlugins<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Sometimes, as with the moreevents plugin, the plugin needs to be imported to modify the typings for discord.js events so that you can access the events more easily.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@gcommands/plugin-moreevents&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>That&#39;s it! Now we can use other events added by moreevents. For official plugins, you will always find implementation instructions in the README.md and we hope that this will be the case for community plugins as well.</p><h2 id="gcommands-plugin-language" tabindex="-1"><a class="header-anchor" href="#gcommands-plugin-language" aria-hidden="true">#</a> GCommands Plugin Language</h2>',7),y=l("For the "),q=e("code",null,"@gcommands/pugin-language",-1),w=l(" plugin you can stay here for a while, because it has much more integration than it seems. With this plugin you are able to customize basic responses which you can find "),j={href:"https://github.com/Garlic-Team/gcommands/blob/next/src/responses.json",target:"_blank",rel:"noopener noreferrer"},_=l("here"),x=l("."),G=c('<p>You just need to add the following to your lang file:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n   <span class="token property">&quot;langname&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;NOT_FOUND&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Invalid command&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;ERROR&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Command is broken :((&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;COOLDOWN&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Please wait {duration}&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;ARGUMENT_REQUIRED&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Please provide argument {name} with type {type}&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;ARGUMENT_TIME&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Time, please re-run command&quot;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',2),E=l("You can check full readme "),R={href:"https://github.com/Garlic-Team/gcommands-addons/blob/master/packages/plugin-language/README.md",target:"_blank",rel:"noopener noreferrer"},T=l("here");u.render=function(l,c){const u=n("OutboundLink"),C=n("CodeGroupItem"),O=n("CodeGroup");return s(),a(p,null,[i,e("p",null,[r,e("a",m,[d,t(u)]),g]),k,t(O,null,{default:o((()=>[t(C,{title:"npm"},{default:o((()=>[h])),_:1}),t(C,{title:"yarn"},{default:o((()=>[b])),_:1}),t(C,{title:"pnpm"},{default:o((()=>[f])),_:1})])),_:1}),v,e("p",null,[y,q,w,e("a",j,[_,t(u)]),x]),G,e("p",null,[E,e("a",R,[T,t(u)])])],64)};export{u as default};
