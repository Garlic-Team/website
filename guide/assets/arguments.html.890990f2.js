import{r as n,o as s,c as a,a as p,b as t,w as e,F as o,d as c,f as l}from"./app.41486d15.js";const u={},r=p("h1",{id:"creating-your-command-with-arguments",tabindex:"-1"},[p("a",{class:"header-anchor",href:"#creating-your-command-with-arguments","aria-hidden":"true"},"#"),c(" Creating your command with arguments")],-1),i={class:"custom-container danger"},k=p("p",{class:"custom-container-title"},"DANGER",-1),m=c("We're only going to show the "),b=p("code",null,"new Command",-1),d=c(" method here, but of course the "),g=p("code",null,"class extends",-1),y=c(" method works as well. "),h=c("What?"),f=l('<h2 id="normal-arguments" tabindex="-1"><a class="header-anchor" href="#normal-arguments" aria-hidden="true">#</a> Normal arguments</h2><p>If you want to add arguments to the command, you have more options. Now, we&#39;ll show you how to add simple arguments and different types.<br> First, you need to import the <code>ArgumentType</code> enum and <code>Argument</code> class, which we will be using a lot.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> MessageEmbed <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;discord.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> Command<span class="token punctuation">,</span> CommandType<span class="token punctuation">,</span> Argument<span class="token punctuation">,</span> ArgumentType <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gcommands&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Command</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;userinfo&#39;</span><span class="token punctuation">,</span>\n    description<span class="token operator">:</span> <span class="token string">&#39;Check user informations&#39;</span><span class="token punctuation">,</span>\n    type<span class="token operator">:</span> <span class="token punctuation">[</span> CommandType<span class="token punctuation">.</span><span class="token constant">SLASH</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    arguments<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span>\n            description<span class="token operator">:</span> <span class="token string">&#39;Select user&#39;</span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">USER</span><span class="token punctuation">,</span>\n            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">run</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// We will use the getMember method because we want to get a straight GuildMember from the argument.</span>\n        <span class="token comment">// We&#39;ll put `user` in this method because that&#39;s what our argument is called.</span>\n        <span class="token keyword">const</span> member <span class="token operator">=</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getMember</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">const</span> embed <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MessageEmbed</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">setAuthor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                name<span class="token operator">:</span> member<span class="token punctuation">.</span>user<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                iconURL<span class="token operator">:</span> member<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">displayAvatarURL</span><span class="token punctuation">(</span><span class="token punctuation">{</span> dynamic<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">addFields</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;Username&#39;</span><span class="token punctuation">,</span>\n                    value<span class="token operator">:</span> member<span class="token punctuation">.</span>user<span class="token punctuation">.</span>username<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    inline<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;Discriminator&#39;</span><span class="token punctuation">,</span>\n                    value<span class="token operator">:</span> member<span class="token punctuation">.</span>user<span class="token punctuation">.</span>discriminator<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    inline<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;Nickname&#39;</span><span class="token punctuation">,</span>\n                    value<span class="token operator">:</span> member<span class="token punctuation">.</span>nickname <span class="token operator">||</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span>\n                    inline<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;Timeout&#39;</span><span class="token punctuation">,</span>\n                    value<span class="token operator">:</span> member<span class="token punctuation">.</span>isCommunicationDisabled <span class="token operator">?</span> member<span class="token punctuation">.</span>communicationDisabledUntil <span class="token operator">:</span> <span class="token string">&#39;‚ùå&#39;</span><span class="token punctuation">,</span>\n                    inline<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;Joined At&#39;</span><span class="token punctuation">,</span>\n                    value<span class="token operator">:</span> member<span class="token punctuation">.</span>joinedAt<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    inline<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;Created At&#39;</span><span class="token punctuation">,</span>\n                    value<span class="token operator">:</span> member<span class="token punctuation">.</span>user<span class="token punctuation">.</span>createdAt<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    inline<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>member<span class="token punctuation">.</span>displayHexColor <span class="token operator">||</span> <span class="token string">&quot;RANDOM&quot;</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">setThumbnail</span><span class="token punctuation">(</span>member<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">displayAvatarURL</span><span class="token punctuation">(</span><span class="token punctuation">{</span> dynamic<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">setTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Informations about </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>member<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            embeds<span class="token operator">:</span> <span class="token punctuation">[</span> embed <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>You don&#39;t have to use the <code>Argument</code> class, but you can write the arguments directly into the <code>arguments</code> object.</p></div><h2 id="sub-commands" tabindex="-1"><a class="header-anchor" href="#sub-commands" aria-hidden="true">#</a> Sub Commands</h2><p>What is it? What is it for? Why is it? You may have a lot of questions, but we&#39;ll explain it to you right away.<br> Sub commands are for when you want to have a sub command. For example, <code>/money give &lt;name&gt;</code>.<br> It doesn&#39;t pay to do a <code>/moneygive</code> command when the limit of commands for interaction is 100 so far, and it doesn&#39;t look pretty either.</p><p>Again, it&#39;s very simple, as in the first example.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Command<span class="token punctuation">,</span> CommandType<span class="token punctuation">,</span> AutoDeferType<span class="token punctuation">,</span> Argument<span class="token punctuation">,</span> ArgumentType <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gcommands&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Command</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;money&#39;</span><span class="token punctuation">,</span>\n    description<span class="token operator">:</span> <span class="token string">&#39;Give/remove/check money&#39;</span><span class="token punctuation">,</span>\n    type<span class="token operator">:</span> <span class="token punctuation">[</span> CommandType<span class="token punctuation">.</span><span class="token constant">SLASH</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    autoDefer<span class="token operator">:</span> AutoDeferType<span class="token punctuation">.</span><span class="token constant">NORMAL</span><span class="token punctuation">,</span>\n    arguments<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>\n            description<span class="token operator">:</span> <span class="token string">&#39;Add money for user&#39;</span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND</span><span class="token punctuation">,</span>\n            arguments<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span>\n                    description<span class="token operator">:</span> <span class="token string">&#39;Select user&#39;</span><span class="token punctuation">,</span>\n                    type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">USER</span><span class="token punctuation">,</span>\n                    required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;remove&#39;</span><span class="token punctuation">,</span>\n            description<span class="token operator">:</span> <span class="token string">&#39;Remove money from user&#39;</span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND</span><span class="token punctuation">,</span>\n            arguments<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span>\n                    description<span class="token operator">:</span> <span class="token string">&#39;Select user&#39;</span><span class="token punctuation">,</span>\n                    type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">USER</span><span class="token punctuation">,</span>\n                    required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;check&#39;</span><span class="token punctuation">,</span>\n            description<span class="token operator">:</span> <span class="token string">&#39;Check user balance&#39;</span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND</span><span class="token punctuation">,</span>\n            arguments<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span>\n                    description<span class="token operator">:</span> <span class="token string">&#39;Select user&#39;</span><span class="token punctuation">,</span>\n                    type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">USER</span><span class="token punctuation">,</span>\n                    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">run</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Now let&#39;s detect what sub command was used.</span>\n        <span class="token keyword">const</span> sub <span class="token operator">=</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getSubcommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>sub <span class="token operator">===</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// add code</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sub <span class="token operator">===</span> <span class="token string">&#39;remove&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// remove code</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span>  <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> user <span class="token operator">=</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getMember</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// Why safeReply? We have `autoDefer` in the command, if by chance there is a problem with the database, so that the command doesn&#39;t fail and the discord doesn&#39;t throw &quot;Interaction failed&quot;.</span>\n            <span class="token comment">// This will allow your command to last a bit longer, and then the reply will automatically modify itself. So `safeReply` is a function of `reply` and `editReply`.</span>\n            ctx<span class="token punctuation">.</span><span class="token function">safeReply</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>user <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>user<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;s</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Your</span><span class="token template-punctuation string">`</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> balance is 0‚Ç¨.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                ephemeral<span class="token operator">:</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div>',8),w={class:"custom-container tip"},A=p("p",{class:"custom-container-title"},"TIP",-1),v=c("If you want advice on the database, use "),S=c("prisma"),T=l('<h2 id="sub-command-group" tabindex="-1"><a class="header-anchor" href="#sub-command-group" aria-hidden="true">#</a> Sub Command Group</h2><p>What is a Sub Command Group? After all, we have Sub Command, so why Sub Command Group? This is a very useful type to make your life easier.<br> If you want to have a command such as <code>/role mass add &lt;role&gt;</code> then you are in the right place.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Command<span class="token punctuation">,</span> CommandType<span class="token punctuation">,</span> Argument<span class="token punctuation">,</span> ArgumentType <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gcommands&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> ms <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;ms&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Command</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;role&#39;</span><span class="token punctuation">,</span>\n    description<span class="token operator">:</span> <span class="token string">&#39;Add/remove role&#39;</span><span class="token punctuation">,</span>\n    type<span class="token operator">:</span> <span class="token punctuation">[</span> CommandType<span class="token punctuation">.</span><span class="token constant">SLASH</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    arguments<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;mass&#39;</span><span class="token punctuation">,</span>\n            description<span class="token operator">:</span> <span class="token string">&#39;Role for everyone&#39;</span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND_GROUP</span><span class="token punctuation">,</span>\n            arguments<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>\n                    description<span class="token operator">:</span> <span class="token string">&#39;Add role (everyone)&#39;</span><span class="token punctuation">,</span>\n                    type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND</span><span class="token punctuation">,</span>\n                    arguments<span class="token operator">:</span> <span class="token punctuation">[</span>\n                        <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                            name<span class="token operator">:</span> <span class="token string">&#39;role&#39;</span><span class="token punctuation">,</span>\n                            description<span class="token operator">:</span> <span class="token string">&#39;Select role&#39;</span><span class="token punctuation">,</span>\n                            type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">ROLE</span><span class="token punctuation">,</span>\n                            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">]</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;remove&#39;</span><span class="token punctuation">,</span>\n                    description<span class="token operator">:</span> <span class="token string">&#39;Remove role (everyone)&#39;</span><span class="token punctuation">,</span>\n                    type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND</span><span class="token punctuation">,</span>\n                    arguments<span class="token operator">:</span> <span class="token punctuation">[</span>\n                        <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                            name<span class="token operator">:</span> <span class="token string">&#39;role&#39;</span><span class="token punctuation">,</span>\n                            description<span class="token operator">:</span> <span class="token string">&#39;Select role&#39;</span><span class="token punctuation">,</span>\n                            type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">ROLE</span><span class="token punctuation">,</span>\n                            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">]</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    \t<span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      \t\tname<span class="token operator">:</span> <span class="token string">&#39;single&#39;</span><span class="token punctuation">,</span>\n      \t\tdescription<span class="token operator">:</span> <span class="token string">&#39;Role for single user&#39;</span><span class="token punctuation">,</span>\n      \t\ttype<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND_GROUP</span><span class="token punctuation">,</span>\n      \t\targuments<span class="token operator">:</span> <span class="token punctuation">[</span>\n        \t\t<span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          \t\t\tname<span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>\n          \t\t\tdescription<span class="token operator">:</span> <span class="token string">&#39;Add role for user&#39;</span><span class="token punctuation">,</span>\n          \t\t\ttype<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND</span><span class="token punctuation">,</span>\n          \t\t\targuments<span class="token operator">:</span> <span class="token punctuation">[</span>\n            \t\t\t<span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              \t\t\t\tname<span class="token operator">:</span> <span class="token string">&#39;role&#39;</span><span class="token punctuation">,</span>\n              \t\t\t\tdescription<span class="token operator">:</span> <span class="token string">&#39;Select role&#39;</span><span class="token punctuation">,</span>\n              \t\t\t\ttype<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">ROLE</span><span class="token punctuation">,</span>\n              \t\t\t\trequired<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            \t\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n           \t\t\t\t<span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              \t\t\t\tname<span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span>\n              \t\t\t\tdescription<span class="token operator">:</span> <span class="token string">&#39;Select user&#39;</span><span class="token punctuation">,</span>\n              \t\t\t\ttype<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">USER</span><span class="token punctuation">,</span>\n              \t\t\t\trequired<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            \t\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n          \t\t\t<span class="token punctuation">]</span>\n        \t\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        \t\t<span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n         \t\t\tname<span class="token operator">:</span> <span class="token string">&#39;remove&#39;</span><span class="token punctuation">,</span>\n          \t\t\tdescription<span class="token operator">:</span> <span class="token string">&#39;Remove role from user&#39;</span><span class="token punctuation">,</span>\n          \t\t\ttype<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">SUB_COMMAND</span><span class="token punctuation">,</span>\n          \t\t\targuments<span class="token operator">:</span> <span class="token punctuation">[</span>\n            \t\t\t<span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              \t\t\t\tname<span class="token operator">:</span> <span class="token string">&#39;role&#39;</span><span class="token punctuation">,</span>\n              \t\t\t\tdescription<span class="token operator">:</span> <span class="token string">&#39;Select role&#39;</span><span class="token punctuation">,</span>\n              \t\t\t\ttype<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">ROLE</span><span class="token punctuation">,</span>\n              \t\t\t\trequired<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            \t\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            \t\t\t<span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              \t\t\t\tname<span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span>\n              \t\t\t\tdescription<span class="token operator">:</span> <span class="token string">&#39;Select user&#39;</span><span class="token punctuation">,</span>\n              \t\t\t\ttype<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">USER</span><span class="token punctuation">,</span>\n              \t\t\t\trequired<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            \t\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n          \t\t    <span class="token punctuation">]</span>\n        \t\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n      \t\t<span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">run</span><span class="token operator">:</span> <span class="token keyword">async</span><span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Now let&#39;s detect what sub command group was used.</span>\n        <span class="token keyword">const</span> subgroup <span class="token operator">=</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getSubcommandGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> sub <span class="token operator">=</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getSubcommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">const</span> role <span class="token operator">=</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getRole</span><span class="token punctuation">(</span><span class="token string">&#39;role&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>subgroup <span class="token operator">===</span> <span class="token string">&#39;mass&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>sub <span class="token operator">===</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">// Add role (everyone)</span>\n                <span class="token keyword">let</span> members <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> ctx<span class="token punctuation">.</span>guild<span class="token punctuation">.</span>members<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                members <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>members<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n                members <span class="token operator">=</span> members<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">m</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>m<span class="token punctuation">.</span>roles<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                members<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">member</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                    member<span class="token punctuation">.</span>roles<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n                ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ETA: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">ms</span><span class="token punctuation">(</span>members<span class="token punctuation">.</span>length <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                <span class="token comment">// Remove role (everyone)</span>\n                <span class="token keyword">let</span> members <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> ctx<span class="token punctuation">.</span>guild<span class="token punctuation">.</span>members<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                members <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>members<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n                members <span class="token operator">=</span> members<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">m</span> <span class="token operator">=&gt;</span> m<span class="token punctuation">.</span>roles<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                members<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">member</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                    member<span class="token punctuation">.</span>roles<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n                ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ETA: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">ms</span><span class="token punctuation">(</span>members<span class="token punctuation">.</span>length <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> member <span class="token operator">=</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getMember</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>sub <span class="token operator">===</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">// Add role to user</span>\n\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span>member<span class="token punctuation">.</span>roles<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                        content<span class="token operator">:</span> <span class="token string">&#39;You already have this role!&#39;</span><span class="token punctuation">,</span>\n                        ephemeral<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                    <span class="token keyword">return</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                member<span class="token punctuation">.</span>roles<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                        ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                            content<span class="token operator">:</span> <span class="token string">&#39;Added!&#39;</span><span class="token punctuation">,</span>\n                            ephemeral<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                    ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                        content<span class="token operator">:</span> e<span class="token punctuation">,</span>\n                        ephemeral<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n               <span class="token comment">// Remove role from user</span>\n                 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>member<span class="token punctuation">.</span>roles<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                        content<span class="token operator">:</span> <span class="token string">&#39;You don\\&#39;t have this role!&#39;</span><span class="token punctuation">,</span>\n                        ephemeral<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                    <span class="token keyword">return</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                member<span class="token punctuation">.</span>roles<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                        ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                            content<span class="token operator">:</span> <span class="token string">&#39;Removed!&#39;</span><span class="token punctuation">,</span>\n                            ephemeral<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                    ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                        content<span class="token operator">:</span> e<span class="token punctuation">,</span>\n                        ephemeral<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br></div></div><h2 id="autocomplete" tabindex="-1"><a class="header-anchor" href="#autocomplete" aria-hidden="true">#</a> Autocomplete</h2><p>What is this? Surely you know that with an argument of type <code>STRING</code> there is an option to add <code>choices</code>.<br> Autocomplete is the same as choices, but with the added benefit of being dynamic.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Command<span class="token punctuation">,</span> CommandType<span class="token punctuation">,</span> Argument<span class="token punctuation">,</span> ArgumentType <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gcommands&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Command</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;autocomplete&#39;</span><span class="token punctuation">,</span>\n    description<span class="token operator">:</span> <span class="token string">&#39;The autocomplete command&#39;</span><span class="token punctuation">,</span>\n    type<span class="token operator">:</span> <span class="token punctuation">[</span> CommandType<span class="token punctuation">.</span><span class="token constant">SLASH</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    arguments<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token keyword">new</span> <span class="token class-name">Argument</span><span class="token punctuation">(</span><span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            description<span class="token operator">:</span> <span class="token string">&#39;String input&#39;</span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> ArgumentType<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">run</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// dynamic choices, autocomplete</span>\n                <span class="token keyword">const</span> guild <span class="token operator">=</span> ctx<span class="token punctuation">.</span>guild<span class="token punctuation">;</span>\n\n                ctx<span class="token punctuation">.</span><span class="token function">respond</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n                    <span class="token punctuation">{</span>\n                        name<span class="token operator">:</span> <span class="token string">&#39;Red&#39;</span><span class="token punctuation">,</span>\n                        value<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">{</span>\n                        name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Your guild id: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>guild<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                        value<span class="token operator">:</span> guild<span class="token punctuation">.</span>id\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">run</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token punctuation">{</span>content<span class="token operator">:</span> ctx<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div>',6);u.render=function(c,l){const u=n("RouterLink");return s(),a(o,null,[r,p("div",i,[k,p("p",null,[m,b,d,g,y,t(u,{to:"/commands/first-command.html"},{default:e((()=>[h])),_:1})])]),f,p("div",w,[A,p("p",null,[v,t(u,{to:"/databases/prisma.html"},{default:e((()=>[S])),_:1})])]),T],64)};export{u as default};
