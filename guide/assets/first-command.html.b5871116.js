import{r as n,o as s,c as a,b as t,w as e,F as o,a as c,d as l,f as p}from"./app.115d4de6.js";const u={},r=c("h1",{id:"creating-your-first-command",tabindex:"-1"},[c("a",{class:"header-anchor",href:"#creating-your-first-command","aria-hidden":"true"},"#"),l(" Creating your first command")],-1),i=c("p",null,[l("Remember the path we set when creating the client? Navigate to your "),c("code",null,"commands"),l(" folder, or create it. In that folder create a new JS file. You will create your first command there, exited?")],-1),m=c("p",null,[l("GCommands support two ways to create commands. You can use "),c("code",null,"new Command({ ...settings })"),l(" or "),c("code",null,"new class extends Command"),l(". We'll demonstrate both cases, and we'll discuss the advantages and disadvantages.")],-1),d=c("div",{class:"language-javascript ext-js line-numbers-mode"},[c("pre",{class:"language-javascript"},[c("code",null,[c("span",{class:"token keyword"},"const"),l(),c("span",{class:"token punctuation"},"{"),l(" Command"),c("span",{class:"token punctuation"},","),l(" CommandType "),c("span",{class:"token punctuation"},"}"),l(),c("span",{class:"token operator"},"="),l(),c("span",{class:"token function"},"require"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'gcommands'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),l("\n\n"),c("span",{class:"token comment"},"// Create a new command with the name 'hello'"),l("\n"),c("span",{class:"token keyword"},"new"),l(),c("span",{class:"token class-name"},"Command"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"{"),l("\n\tname"),c("span",{class:"token operator"},":"),l(),c("span",{class:"token string"},"'hello'"),c("span",{class:"token punctuation"},","),l("\n\tdescription"),c("span",{class:"token operator"},":"),l(),c("span",{class:"token string"},"'Says hello!'"),c("span",{class:"token punctuation"},","),l("\n\t"),c("span",{class:"token comment"},"// GCommands Next offers different types of commands, we will only use slash and message commands here."),l("\n\ttype"),c("span",{class:"token operator"},":"),l(),c("span",{class:"token punctuation"},"["),l("CommandType"),c("span",{class:"token punctuation"},"."),c("span",{class:"token constant"},"SLASH"),c("span",{class:"token punctuation"},","),l(" CommandType"),c("span",{class:"token punctuation"},"."),c("span",{class:"token constant"},"MESSAGE"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},","),l("\n\t"),c("span",{class:"token comment"},"// The function thats executed when the user uses the command."),l("\n\t"),c("span",{class:"token function-variable function"},"run"),c("span",{class:"token operator"},":"),l(),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},"ctx"),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token operator"},"=>"),l(),c("span",{class:"token punctuation"},"{"),l("\n\t\t"),c("span",{class:"token keyword"},"return"),l(" ctx"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"reply"),c("span",{class:"token punctuation"},"("),c("span",{class:"token template-string"},[c("span",{class:"token template-punctuation string"},"`"),c("span",{class:"token string"},"Hello "),c("span",{class:"token interpolation"},[c("span",{class:"token interpolation-punctuation punctuation"},"${"),l("ctx"),c("span",{class:"token punctuation"},"."),l("username"),c("span",{class:"token interpolation-punctuation punctuation"},"}")]),c("span",{class:"token string"},"!"),c("span",{class:"token template-punctuation string"},"`")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),l("\n\t"),c("span",{class:"token punctuation"},"}"),l("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),l("\n")])]),c("div",{class:"line-numbers"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br")])],-1),k=c("div",{class:"language-javascript ext-js line-numbers-mode"},[c("pre",{class:"language-javascript"},[c("code",null,[c("span",{class:"token keyword"},"const"),l(),c("span",{class:"token punctuation"},"{"),l(" Command"),c("span",{class:"token punctuation"},","),l(" CommandType "),c("span",{class:"token punctuation"},"}"),l(),c("span",{class:"token operator"},"="),l(),c("span",{class:"token function"},"require"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'gcommands'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),l("\n\n"),c("span",{class:"token comment"},"// Create a new command with the name 'hello-class'"),l("\n"),c("span",{class:"token keyword"},"new"),l(),c("span",{class:"token class-name"},"class"),l(),c("span",{class:"token keyword"},"extends"),l(),c("span",{class:"token class-name"},"Command"),l(),c("span",{class:"token punctuation"},"{"),l("\n\t"),c("span",{class:"token function"},"constructor"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token punctuation"},"{"),l("\n\t\t"),c("span",{class:"token keyword"},"super"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"{"),l("\n\t\t\tname"),c("span",{class:"token operator"},":"),l(),c("span",{class:"token string"},"'hello'"),c("span",{class:"token punctuation"},","),l("\n\t\t\tdescription"),c("span",{class:"token operator"},":"),l(),c("span",{class:"token string"},"'Says hello!'"),c("span",{class:"token punctuation"},","),l("\n\t\t\t"),c("span",{class:"token comment"},"// GCommands Next offers different types of commands, we will only use slash and message commands here."),l("\n\t\t\ttype"),c("span",{class:"token operator"},":"),l(),c("span",{class:"token punctuation"},"["),l("CommandType"),c("span",{class:"token punctuation"},"."),c("span",{class:"token constant"},"SLASH"),c("span",{class:"token punctuation"},","),l(" CommandType"),c("span",{class:"token punctuation"},"."),c("span",{class:"token constant"},"MESSAGE"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},","),l("\n\t\t"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),l("\n\t"),c("span",{class:"token punctuation"},"}"),l("\n\n\t"),c("span",{class:"token comment"},"// The function thats executed when the user uses the command."),l("\n\t"),c("span",{class:"token function"},"run"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},"ctx"),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token punctuation"},"{"),l("\n\t\t"),c("span",{class:"token keyword"},"return"),l(" ctx"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"reply"),c("span",{class:"token punctuation"},"("),c("span",{class:"token template-string"},[c("span",{class:"token template-punctuation string"},"`"),c("span",{class:"token string"},"Hello "),c("span",{class:"token interpolation"},[c("span",{class:"token interpolation-punctuation punctuation"},"${"),l("ctx"),c("span",{class:"token punctuation"},"."),l("username"),c("span",{class:"token interpolation-punctuation punctuation"},"}")]),c("span",{class:"token string"},"!"),c("span",{class:"token template-punctuation string"},"`")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),l("\n\t"),c("span",{class:"token punctuation"},"}"),l("\n"),c("span",{class:"token punctuation"},"}"),l("\n")])]),c("div",{class:"line-numbers"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br"),c("span",{class:"line-number"},"16"),c("br"),c("span",{class:"line-number"},"17"),c("br"),c("span",{class:"line-number"},"18"),c("br")])],-1),b=p('<p>The advantage of the new style is that you have straight typings for the <code>run</code> function. In the case of the <code>class</code> command, you have to add JSDocs at the run function to have auto-complete. The new style is also cleaner, shorter to type.</p><p>You insert normal code into the run function as you would with DJS, except that you use <code>ctx</code> instead of <code>message</code> or <code>interaction</code>.<br> The <code>ctx</code> is just a variable that you can rename however you want, or you can import just certain functions using <code>{ reply, user }</code> instead of <code>ctx</code>.<br> You may find that you don&#39;t find some parameters like <code>author</code>. Don&#39;t despair, just use <code>user</code> instead of <code>author</code>.</p><p>When you want to define a client, you can use <code>this.client</code> in case of class, or just use <code>ctx.client</code>.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Creating commands with new was introduced in GCommands Next with the main purpose of making your code look more clean! You can use the method your prefer.</p></div><p>Restart your bot, and you should see the <code>hello</code> slash command pop-up in your dev-server. Go ahead and give it a try!</p>',5),h=l("hello"),f=l(" Hello S222em! "),y=c("p",null,"You can also use the message command",-1),g=l(" .hello "),w=l(" Hello S222em! ");u.render=function(c,l){const p=n("CodeGroupItem"),u=n("CodeGroup"),v=n("DiscordInteraction"),x=n("DiscordMessage"),C=n("DiscordMessages");return s(),a(o,null,[r,i,m,t(u,null,{default:e((()=>[t(p,{title:"command"},{default:e((()=>[d])),_:1}),t(p,{title:"class command"},{default:e((()=>[k])),_:1})])),_:1}),b,t(C,null,{default:e((()=>[t(x,{profile:"bot"},{interactions:e((()=>[t(v,{profile:"user",author:"GCommands",command:!0},{default:e((()=>[h])),_:1})])),default:e((()=>[f])),_:1})])),_:1}),y,t(C,null,{default:e((()=>[t(x,{profile:"user"},{default:e((()=>[g])),_:1}),t(x,{profile:"bot"},{default:e((()=>[w])),_:1})])),_:1})],64)};export{u as default};
