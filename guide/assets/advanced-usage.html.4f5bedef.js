import{f as n}from"./app.cf8a01a7.js";const s={},a=n('<h1 id="advanced-usage" tabindex="-1"><a class="header-anchor" href="#advanced-usage" aria-hidden="true">#</a> Advanced Usage</h1><p>For example, when you have an inhibitor <code>MemberRoles</code>, <code>UserOnly</code>, <code>ClientRoles</code> it has to define <code>ids</code> which can be a problem.<br> If you wanted to make a command just for server boosters, you would have to put a condition in the command or create a custom inhibitor. We come up with a simpler solution.</p><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>Available only in <code>&gt;=9.0.2</code></p></div><p>If you want to dynamically retrieve ids, you can use the <code>getIds</code> function.<br> In this function you return an array with role ids.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Command<span class="token punctuation">,</span> Inhibitor<span class="token operator">:</span> <span class="token punctuation">{</span> MemberRoles <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gcommands&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Command</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    inhibitors<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token keyword">new</span> <span class="token class-name">MemberRoles</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token function-variable function">getIds</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token punctuation">[</span> ctx<span class="token punctuation">.</span>guild<span class="token punctuation">.</span>roles<span class="token punctuation">.</span>premiumSubscriberRole <span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',5);s.render=function(n,s){return a};export{s as default};
