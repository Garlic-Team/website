import{r as n,o as s,c as a,a as e,b as t,w as l,F as o,d as p,f as i}from"./app.5d94a5ab.js";const u={},c=e("h1",{id:"what-are-plugins",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#what-are-plugins","aria-hidden":"true"},"#"),p(" What are plugins?")],-1),r=p("GCommands Next has started to support plugins. A plugin is an addition to GCommands that will make your job easier. Users can create custom plugins for inhibitors, events and such. GCommands has a couple of official plugins, which can be found "),d={href:"https://github.com/Garlic-Team/gcommands-plugins/",target:"_blank",rel:"noopener noreferrer"},m=p("here"),g=p("."),h=e("p",null,"Official plugin list:",-1),f=e("ul",null,[e("li",null,"moreevents")],-1),k=e("p",null,"You always install the plugin as follows:",-1),b=e("div",{class:"language-bash ext-sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"npm"),p(),e("span",{class:"token function"},"install"),p(" gcommands-plugin-"),e("span",{class:"token punctuation"},"{"),p("name"),e("span",{class:"token punctuation"},"}"),p("\n")])])],-1),v=e("div",{class:"language-bash ext-sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"yarn"),p(),e("span",{class:"token function"},"add"),p(" gcommands-plugin-"),e("span",{class:"token punctuation"},"{"),p("name"),e("span",{class:"token punctuation"},"}"),p("\n")])])],-1),w=e("div",{class:"language-bash ext-sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"pnpm"),p(),e("span",{class:"token function"},"add"),p(" gcommands-plugin-"),e("span",{class:"token punctuation"},"{"),p("name"),e("span",{class:"token punctuation"},"}"),p("\n")])])],-1),y=i('<p>In our case we use <code>npm i gcommands-plugin-moreevents</code>.</p><p>Once installed, all you have to do is make sure you have the following in the main file:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Plugins <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gcommands&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nPlugins<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Sometimes, as with the moreEvents plugin, the plugin needs to be imported to modify the typings for discord.js events so that you can access the events more easily.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;gcommands-plugin-moreevents&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>That&#39;s it! Now we can use other events added by moreevents. For official plugins, you will always find implementation instructions in the README.md and we hope that this will be the case for community plugins as well.</p>',6);u.render=function(p,i){const u=n("OutboundLink"),j=n("CodeGroupItem"),x=n("CodeGroup");return s(),a(o,null,[c,e("p",null,[r,e("a",d,[m,t(u)]),g]),h,f,k,t(x,null,{default:l((()=>[t(j,{title:"npm"},{default:l((()=>[b])),_:1}),t(j,{title:"yarn"},{default:l((()=>[v])),_:1}),t(j,{title:"pnpm"},{default:l((()=>[w])),_:1})])),_:1}),y],64)};export{u as default};
