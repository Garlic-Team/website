import{r as n,o as s,c as a,a as e,b as t,w as p,F as o,f as c,d as l}from"./app.b1f7d103.js";const i={},r=c('<h1 id="updating-from-v6-to-v7" tabindex="-1"><a class="header-anchor" href="#updating-from-v6-to-v7" aria-hidden="true">#</a> Updating from v6 to v7</h1><h2 id="gcommandsoptions" tabindex="-1"><a class="header-anchor" href="#gcommandsoptions" aria-hidden="true">#</a> GCommandsOptions</h2><h3 id="cmddir" tabindex="-1"><a class="header-anchor" href="#cmddir" aria-hidden="true">#</a> cmdDir</h3><p>You now need to give the full path. This can be easily done with <code>path</code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> join <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// You don&#39;t have to install this package.</span>\n\n<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GCommandsClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token operator">...</span>options<span class="token punctuation">,</span>\n  cmdDir<span class="token operator">:</span> <span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;commands&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="eventdir" tabindex="-1"><a class="header-anchor" href="#eventdir" aria-hidden="true">#</a> eventDir</h3><p>You now need to give the full path. This can be easily done with <code>path</code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> join <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// You don&#39;t have to install this package.</span>\n\n<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GCommandsClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token operator">...</span>options<span class="token punctuation">,</span>\n  eventDir<span class="token operator">:</span> <span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;events&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="commands" tabindex="-1"><a class="header-anchor" href="#commands" aria-hidden="true">#</a> commands</h3><p>The slash/context set in the client are now default options, and will be overwriten by options in the command. For example:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GCommandsClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token operator">...</span>options<span class="token punctuation">,</span>\n  commands<span class="token operator">:</span> <span class="token punctuation">{</span>\n    slash<span class="token operator">:</span> <span class="token string">&#39;false&#39;</span><span class="token punctuation">,</span>\n    context<span class="token operator">:</span> <span class="token string">&#39;false&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// And in the command</span>\n\n<span class="token keyword">class</span> <span class="token class-name">extends</span> Command <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">client</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token operator">...</span>options<span class="token punctuation">,</span>\n      slash<span class="token operator">:</span> <span class="token string">&#39;both&#39;</span><span class="token punctuation">,</span> <span class="token comment">// This will now create a slash and message command.</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="commands-slash" tabindex="-1"><a class="header-anchor" href="#commands-slash" aria-hidden="true">#</a> commands#slash</h3><p>This was changed to turn of message/slash commands completly. (mainly for context menu&#39;s)</p><table><thead><tr><th>TYPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>both</td><td>Message + Slash</td></tr><tr><td>slash</td><td>Only slash</td></tr><tr><td>message</td><td>Only message</td></tr><tr><td>false</td><td>None</td></tr></tbody></table><h2 id="arguments" tabindex="-1"><a class="header-anchor" href="#arguments" aria-hidden="true">#</a> Arguments</h2><h3 id="sub-command-and-sub-command-group" tabindex="-1"><a class="header-anchor" href="#sub-command-and-sub-command-group" aria-hidden="true">#</a> SUB_COMMAND and SUB_COMMAND_GROUP</h3><p>GCommands now supports the SUB_COMMAND and SUB_COMMAND_GROUP type!</p>',17),u=l("See "),d=l("here"),m=l(" for more information."),k=c('<h3 id="choices" tabindex="-1"><a class="header-anchor" href="#choices" aria-hidden="true">#</a> Choices</h3><p>Choices were fixed for message based commands. This means that the value of the choice, will be the returned argument.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> choices <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&quot;True&quot;</span><span class="token punctuation">,</span> <span class="token comment">// This will be the option for the user.</span>\n  value<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// This will be the returned argument.</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// In the command</span>\n<span class="token function">run</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> args <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span> <span class="token comment">// [ true ]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="commands-1" tabindex="-1"><a class="header-anchor" href="#commands-1" aria-hidden="true">#</a> Commands</h2><h3 id="commandrunoptions" tabindex="-1"><a class="header-anchor" href="#commandrunoptions" aria-hidden="true">#</a> CommandRunOptions</h3><p>The <code>args</code> and <code>objectArgs</code> have been moved to the <code>CommandRunOptions</code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">run</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> args<span class="token punctuation">,</span> objectArgs<span class="token punctuation">,</span> etc <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="permissions" tabindex="-1"><a class="header-anchor" href="#permissions" aria-hidden="true">#</a> Permissions</h3><p>Slash commands automaticly grey out if the <code>userRequiredRoles</code> or <code>userOnly</code> requirements are not met.</p><h2 id="inhibitors" tabindex="-1"><a class="header-anchor" href="#inhibitors" aria-hidden="true">#</a> Inhibitors</h2><p>The <code>args</code> and <code>objectArgs</code> in inhibitors have been moved. You can now acces them like this:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span>dispatcher<span class="token punctuation">.</span><span class="token function">addInhibitor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">interaction<span class="token punctuation">,</span> <span class="token punctuation">{</span> args<span class="token punctuation">,</span> objectArgs<span class="token punctuation">,</span> etc <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',12);i.render=function(c,l){const i=n("RouterLink");return s(),a(o,null,[r,e("p",null,[u,t(i,{to:"/gcommands-latest/commands/usingsub.html"},{default:p((()=>[d])),_:1}),m]),k],64)};export{i as default};
